{"version":3,"file":"direct-helper.min.js","sources":["../src/index.js"],"sourcesContent":["/**\n * Returns a very important number\n * @return {number}\n */\nexport default class DirectHelper {\n  constructor(prediction, options = {}) {\n      this.prediction = prediction;\n      let parameters = [];\n      for (let atom of prediction) {\n          let item = {};\n          item.delta = atom.delta;\n          item.multiplicity = atom.multiplicity;\n          item.j = [];\n          for (let j of atom.j) {\n              item.j.push(j.coupling)\n          }\n          parameters.push(item)\n      }\n      this.parameters = parameters;\n  }\n  \n  getParameters() {\n      return this.parameters\n  }\n  \n  suggestBoundaries(options = {}) {\n      const parameters = this.parameters;\n      const {\n          width = 0.1,\n      } = options;\n      let result = [];\n      for (let parameter of parameters) {\n          let atom = {};\n          atom.lowerDelta = roundTo(parameter.delta - width);\n          atom.upperDelta = roundTo(parameter.delta + width);\n          atom.lowerJcoupling = [];\n          atom.upperJcoupling = [];\n          for (let coupling of parameter.j) {\n              atom.lowerJcoupling.push(roundTo(coupling - width));\n              atom.upperJcoupling.push(roundTo(coupling + width));\n          }\n          result.push(atom)\n      }\n      return result;\n  }\n  \n  getBoundaries(options={}){\n      const {\n          boundaries = this.suggestBoundaries(),\n      } = options\n      let result = { lower: [], upper: [] }\n      for (let atom of boundaries) {\n          result.lower.push(atom.lowerDelta);\n          result.upper.push(atom.upperDelta);\n          for (let i = 0; i < atom.lowerJcoupling.length; i++) {\n              result.lower.push(atom.lowerJcoupling[i]);\n              result.upper.push(atom.upperJcoupling[i]);\n          }\n      }\n      return result;\n  }\n  \n  tidyUpParameters() {\n      let result = this.prediction.slice();\n      let counter = 0;\n      return function(parameters) {\n          for (let atom of result) {\n              atom.delta = parameters[counter++];\n              for (let jcoupling of atom.j){\n                  jcoupling.coupling = parameters[counter++];\n              }\n          }\n          counter = 0;\n          return result;\n      }\n  }\n}\n\n\nfunction roundTo(number, options={}) {\n  const { decimals = 4 } = options\n  const power = 10**decimals;\n  return Math.round(number * power) / power;\n}"],"names":["roundTo","number","options","decimals","power","Math","round","constructor","prediction","parameters","atom","item","delta","multiplicity","j","push","coupling","getParameters","this","suggestBoundaries","width","result","parameter","lowerDelta","upperDelta","lowerJcoupling","upperJcoupling","getBoundaries","boundaries","lower","upper","i","length","tidyUpParameters","slice","counter","jcoupling"],"mappings":"6OA+EA,SAASA,EAAQC,EAAQC,EAAQ,UACzBC,SAAEA,EAAW,GAAMD,EACnBE,EAAQ,IAAID,SACXE,KAAKC,MAAML,EAASG,GAASA,SA9EvB,MACbG,YAAYC,EAAYN,EAAU,SACzBM,WAAaA,MACdC,EAAa,OACZ,IAAIC,KAAQF,EAAY,KACrBG,EAAO,GACXA,EAAKC,MAAQF,EAAKE,MAClBD,EAAKE,aAAeH,EAAKG,aACzBF,EAAKG,EAAI,OACJ,IAAIA,KAAKJ,EAAKI,EACfH,EAAKG,EAAEC,KAAKD,EAAEE,UAElBP,EAAWM,KAAKJ,QAEfF,WAAaA,EAGtBQ,uBACWC,KAAKT,WAGhBU,kBAAkBjB,EAAU,UAClBO,EAAaS,KAAKT,YAClBW,MACFA,EAAQ,IACRlB,MACAmB,EAAS,OACR,IAAIC,KAAab,EAAY,KAC1BC,EAAO,GACXA,EAAKa,WAAavB,EAAQsB,EAAUV,MAAQQ,GAC5CV,EAAKc,WAAaxB,EAAQsB,EAAUV,MAAQQ,GAC5CV,EAAKe,eAAiB,GACtBf,EAAKgB,eAAiB,OACjB,IAAIV,KAAYM,EAAUR,EAC3BJ,EAAKe,eAAeV,KAAKf,EAAQgB,EAAWI,IAC5CV,EAAKgB,eAAeX,KAAKf,EAAQgB,EAAWI,IAEhDC,EAAON,KAAKL,UAETW,EAGXM,cAAczB,EAAQ,UACZ0B,WACFA,EAAaV,KAAKC,qBAClBjB,MACAmB,EAAS,CAAEQ,MAAO,GAAIC,MAAO,QAC5B,IAAIpB,KAAQkB,EAAY,CACzBP,EAAOQ,MAAMd,KAAKL,EAAKa,YACvBF,EAAOS,MAAMf,KAAKL,EAAKc,gBAClB,IAAIO,EAAI,EAAGA,EAAIrB,EAAKe,eAAeO,OAAQD,IAC5CV,EAAOQ,MAAMd,KAAKL,EAAKe,eAAeM,IACtCV,EAAOS,MAAMf,KAAKL,EAAKgB,eAAeK,WAGvCV,EAGXY,uBACQZ,EAASH,KAAKV,WAAW0B,QACzBC,EAAU,SACP,SAAS1B,OACP,IAAIC,KAAQW,EAAQ,CACrBX,EAAKE,MAAQH,EAAW0B,SACnB,IAAIC,KAAa1B,EAAKI,EACvBsB,EAAUpB,SAAWP,EAAW0B,YAGxCA,EAAU,EACHd"}