{"version":3,"file":"direct-helper.js","sources":["../src/index.js"],"sourcesContent":["/**\n * Returns a very important number\n * @return {number}\n */\nexport default class DirectHelper {\n  constructor(prediction, options = {}) {\n      this.prediction = prediction;\n      let parameters = [];\n      for (let atom of prediction) {\n          let item = {};\n          item.delta = atom.delta;\n          item.multiplicity = atom.multiplicity;\n          item.j = [];\n          for (let j of atom.j) {\n              item.j.push(j.coupling)\n          }\n          parameters.push(item)\n      }\n      this.parameters = parameters;\n  }\n  \n  getParameters() {\n      return this.parameters\n  }\n  \n  suggestBoundaries(options = {}) {\n      const parameters = this.parameters;\n      const {\n          width = 0.1,\n      } = options;\n      let result = [];\n      for (let parameter of parameters) {\n          let atom = {};\n          atom.lowerDelta = roundTo(parameter.delta - width);\n          atom.upperDelta = roundTo(parameter.delta + width);\n          atom.lowerJcoupling = [];\n          atom.upperJcoupling = [];\n          for (let coupling of parameter.j) {\n              atom.lowerJcoupling.push(roundTo(coupling - width));\n              atom.upperJcoupling.push(roundTo(coupling + width));\n          }\n          result.push(atom)\n      }\n      return result;\n  }\n  \n  getBoundaries(options={}){\n      const {\n          boundaries = this.suggestBoundaries(),\n      } = options\n      let result = { lower: [], upper: [] }\n      for (let atom of boundaries) {\n          result.lower.push(atom.lowerDelta);\n          result.upper.push(atom.upperDelta);\n          for (let i = 0; i < atom.lowerJcoupling.length; i++) {\n              result.lower.push(atom.lowerJcoupling[i]);\n              result.upper.push(atom.upperJcoupling[i]);\n          }\n      }\n      return result;\n  }\n  \n  tidyUpParameters() {\n      let result = this.prediction.slice();\n      let counter = 0;\n      return function(parameters) {\n          for (let atom of result) {\n              atom.delta = parameters[counter++];\n              for (let jcoupling of atom.j){\n                  jcoupling.coupling = parameters[counter++];\n              }\n          }\n          counter = 0;\n          return result;\n      }\n  }\n}\n\n\nfunction roundTo(number, options={}) {\n  const { decimals = 4 } = options\n  const power = 10**decimals;\n  return Math.round(number * power) / power;\n}"],"names":["DirectHelper","constructor","prediction","options","parameters","atom","item","delta","multiplicity","j","push","coupling","getParameters","suggestBoundaries","width","result","parameter","lowerDelta","roundTo","upperDelta","lowerJcoupling","upperJcoupling","getBoundaries","boundaries","lower","upper","i","length","tidyUpParameters","slice","counter","jcoupling","number","decimals","power","Math","round"],"mappings":"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"}