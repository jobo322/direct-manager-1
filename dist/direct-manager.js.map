{"version":3,"file":"direct-manager.js","sources":["../src/utils/getCouplings.js","../src/utils/roundTo.js","../src/index.js"],"sourcesContent":["/**\n * Returns the couplings in the prediction file.\n * @param {Array} prediction - Prediction obtained with SPINUS\n * @return {Array}\n */\n\nexport function getCouplings(prediction) {\n  prediction = prediction.slice();\n  let parameters = [];\n  for (let i = 0; i < prediction.length; i++) {\n    for (let j = 0; j < prediction[i].j.length; j++) {\n      let item = { ids: [], coupling: undefined };\n      item.ids = prediction[i].diaIDs.slice();\n      item.ids.push(prediction[i].j[j].diaID);\n      item.coupling = prediction[i].j[j].coupling;\n      parameters.push(item);\n    }\n  }\n\n  let result = parameters.filter(function (currentValue) {\n    if (!this.find((item) => item === currentValue.coupling)) {\n      this.push(currentValue.coupling);\n      return true;\n    } else {\n      return false;\n    }\n  }, []);\n  return result;\n}\n","/**\n * Returns the number with the decimal places specified in the options\n * @param {number} number - The number to be rounded.\n * @param {Object} [options={}]\n * @param {number} [options.decimals] - Number of decimals.\n * @return {number}\n */\n\nexport function roundTo(number, options = {}) {\n  const { decimals = 4 } = options;\n  const power = 10 ** decimals;\n  return Math.round(number * power) / power;\n}\n","import { getCouplings } from './utils/getCouplings';\nimport { roundTo } from './utils/roundTo';\n\n/**\n * DIviding RECTangles manager for NMR spectra optimization\n * @param {Array} prediction - Prediction obtained with SPINUS\n */\nexport default class DirectManager {\n  constructor(prediction) {\n    this.prediction = prediction.slice();\n    this.couplings = getCouplings(prediction);\n  }\n\n  getParameters() {\n    let prediction = this.prediction.slice();\n    let couplings = this.couplings.slice();\n    let result = [];\n    for (let coupling of couplings) {\n      result.push({\n        type: 'coupling',\n        atom: coupling.ids,\n        atomIDs: setAtomIDs(coupling.ids, prediction),\n        value: coupling.coupling,\n      });\n    }\n    for (let atom of prediction) {\n      result.push({\n        type: 'delta',\n        atom: atom.diaIDs,\n        atomIDs: setAtomIDs(atom.diaIDs, prediction),\n        value: atom.delta,\n      });\n    }\n    return result;\n  }\n\n  suggestBoundaries(options = {}) {\n    const parameters = this.getParameters();\n    const { error = 0.1 } = options;\n    let result = [];\n    for (let parameter of parameters) {\n      let atom = {};\n      atom.atom = parameter.atom;\n      atom.type = parameter.type;\n      atom.atomIDs = parameter.atomIDs;\n      atom.lower = roundTo(parameter.value - error);\n      atom.upper = roundTo(parameter.value + error);\n      result.push(atom);\n    }\n    return result;\n  }\n\n  getBoundaries(boundaries, options = {}) {\n    let { error = 0.1 } = options;\n    boundaries = boundaries\n      ? boundaries\n      : this.suggestBoundaries({ error: error });\n    let result = { lower: [], upper: [] };\n    for (let parameter of boundaries) {\n      result.lower.push(parameter.lower);\n      result.upper.push(parameter.upper);\n    }\n    return result;\n  }\n\n  tidyUpParameters() {\n    let result = this.prediction.slice();\n    let couplings = this.couplings.slice();\n    let counter = 0;\n    return function (parameters) {\n      for (let i = 0; i < couplings.length; i++) {\n        couplings[i].coupling = parameters[i];\n      }\n      counter += couplings.length;\n      for (let atom of result) {\n        let relatedAtoms = findCoupling(atom.diaIDs[0], couplings);\n        atom.delta = parameters[counter++];\n        for (let jcoupling of atom.j) {\n          jcoupling.coupling = findCoupling(\n            jcoupling.diaID,\n            relatedAtoms,\n          )[0].coupling;\n        }\n      }\n      counter = 0;\n      return result;\n    };\n  }\n}\n\nfunction findCoupling(id, couplings) {\n  let result = [];\n  for (let coupling of couplings) {\n    for (let value of coupling.ids) {\n      if (value === id) result.push(coupling);\n    }\n  }\n  return result;\n}\n\nfunction setAtomIDs(atomIDs, prediction) {\n  let IDs = prediction.map((item) => item.diaIDs[0]);\n  let result = [];\n  for (let atomID of atomIDs) {\n    let index = IDs.indexOf(atomID);\n    result.push(`H${index + 1}`);\n  }\n  return result;\n}\n"],"names":["getCouplings","prediction","slice","parameters","i","length","j","item","ids","coupling","undefined","diaIDs","push","diaID","result","filter","currentValue","find","roundTo","number","options","decimals","power","Math","round","DirectManager","constructor","couplings","getParameters","type","atom","atomIDs","setAtomIDs","value","delta","suggestBoundaries","error","parameter","lower","upper","getBoundaries","boundaries","tidyUpParameters","counter","relatedAtoms","findCoupling","jcoupling","id","IDs","map","atomID","index","indexOf"],"mappings":"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"}